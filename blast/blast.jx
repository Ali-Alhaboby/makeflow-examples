{"rules": [
	{
		"command": format(
			"./split_fasta 10 small.fasta"
		),
		"inputs": [
			"small.fasta",
			"split_fasta"
		],
		"outputs": [format("small.fasta.%d", x) for x in range(SLICES)],
		"local_job": true,
	},
	{
		"command": format(
			"%s -p %s -d %s/nt -i small.fasta.%d -o small.fasta.%d.out 2> small.fasta.%d.err",
			BLAST,
			BLASTN,
			NT,
			x,
			x,
			x,
		),
		"inputs": [
			BLAST,
			NT,
			format("small.fasta.%d", x)
		],
		"outputs": [
			format("small.fasta.%d.out", x),
			format("small.fasta.%d.err", x),
		]
	} for x in range(SLICES),
	{
		"command": format(
			"%s output.fasta %s",
			CAT_BLAST,
			join([format("small.fasta.%d.out", x) for x in range(20)]),
		),	
		"inputs": [
			CAT_BLAST,
			format("small.fasta.%d.out", x) for x in range(20),
		],
		"output": [
			"output.fasta"
		],
		"local_job": true,
	},
	{
		"command": format(
			"cat %s > output.fasta.err",
			join([format("small.fasta.%d.err", x) for x in range(20)]),
		),	
		"inputs": [
			format("small.fasta.%d.err", x) for x in range(20),
		],
		"output": [
			"output.fasta.err"
		],
		"local_job": true,
	},
],
}
